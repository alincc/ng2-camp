buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '1.10.212'
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'cz.habarta.typescript-generator'

jar {
    baseName = 'campplanner'
    version = '0.0.1-SNAPSHOT'

    into('static') {
        from('../frontend/dist')
    }
}

jar.dependsOn ":frontend:npmBuildProd"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    // Comes from postgres dependency. SpringBoot uses a different logging framework by default.
    all*.exclude group: 'ch.qos.logback'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-security")
    compile('io.jsonwebtoken:jjwt:0.6.0')
    runtime group: 'com.h2database', name: 'h2', version: '1.4.192'
    runtime('org.postgresql:postgresql:9.4-1200-jdbc41')
    compile('org.flywaydb:flyway-core')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
}



task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

// Required by heroku
task stage {
    dependsOn build
    dependsOn ":frontend:npmBuildProd"
}

generateTypeScript {
    outputFile = '../frontend/src/app/model/backend-typings.ts'
    outputFileType = 'implementationFile'
    noFileComment = true
    excludeClasses = [
            'java.io.Serializable'
    ]
    classPatterns = [
            'ch.zuehlke.campplanner.domain.*'
    ]
    declarePropertiesAsOptional = true
    jsonLibrary = 'jackson2'
    sortDeclarations = true
    outputKind = 'module'
}